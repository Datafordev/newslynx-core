.. _api:

NewsLynx API
============

All of **NewsLynx**'s functionality is exposed through a `REST <http://en.wikipedia.org/wiki/Representational_state_transfer>`_ API.  

**Authentication**
------------------

.. _authentication-api-keys:

API Keys
+++++++++

All endpoints except for: :ref:`endpoints-user-login`, require an ``apikey`` passed in as a query-string parameter.  The ``apikey`` is used to ensure that the requesting user is registered and has access to the the requested resource. When a user is created, his/her ``apikey`` is randomnly generated. It can be refreshed at any time.


.. _authentication-organizations:

Organizaitons
+++++++++++++

All endpoints unrelated to :ref:`endpoints-user` or :ref:`endpoints-orgs` require an ``org`` query-string parameter.  Since users can belong to multiple organizations, we use this parameter to ensure:

1. That the requesting user is accessing resources related to his/her associated organization.
2. That the requesting user has permission to access the requested resources.

.. _status-codes:

**Status Codes**
------------------

.. _http-responses-successes:

Successes
+++++++++

Successful responses from the API will only return the following status codes:

+----------------+------------------------------------------------------------+
| HTTP status    |  Description                                               |
+================+============================================================+
| 200 Success    | Standard response for successful HTTP requests.            |
|                | The actual response will depend on the request method used.|
+----------------+------------------------------------------------------------+
| 204 No Content | The server successfully processed the request, but is not  |
|                | returning any content.                                     |
|                | This response is only used for certain ``DELETE`` methods. |
+----------------+------------------------------------------------------------+

.. _http-responses-errors:

Errors
++++++

All errors share this common ``json`` schema:

.. code-block:: javascript

    {
      "status_code": 401,
      "error": "AuthError",
      "message": "Invalid API Key."
    }

Various status codes connote different categories of errors:

+--------------------+------------------------------------------------------------+
| HTTP status        |  Description                                               |
+====================+============================================================+
| 400 Bad Request    | The server rejected the request as invalid.                |
+--------------------+------------------------------------------------------------+
| 401 Unauthorized   | The authentication associated with the request is invalid  |
+--------------------+------------------------------------------------------------+
| 403 Forbidden      | Authentication is valid, but user is not allowed to perform|
|                    | this operation                                             |
+--------------------+------------------------------------------------------------+
| 404 Not Found      | A required object for this operation was not found         |
+--------------------+------------------------------------------------------------+
| 405 Invalid        | This method does not exist                                 |
+--------------------+------------------------------------------------------------+
| 409 Conflict       | A unique constraint was violated                           |
+--------------------+------------------------------------------------------------+
| 500 Internal Server| The server encountered an unexpected error while processing|
|     Error          | the request                                                |
+--------------------+------------------------------------------------------------+

However, every error message will contain a highly-specific message for that particular error. In the case of Internal Server Errors, the server will respond with the error message generated by the responsible code.

.. _name-spacing:

**Namespacing**
------------------

All endpoints are prefaced by ``/api/:version``. The current (and only version) is ``v1``.


.. _endpoints:

**Endpoints**
--------------

All endpoints retunrn ``json``. If you'd like to follow along with these examples, go ahead and set these environment variables:

.. code-block:: bash 

	export NEWSLYNX_API_URL='http://localhost:5000'
	export NEWSLYNX_API_KEY='djljahflsdkfhasldkfhasldfa'


.. _endpoints-user:

**User**
+++++++++++++++

The **User** API enables login and management of basic user settings (password, name, email, apikey, etc).

.. _endpoints-user-json:

User JSON
~~~~~~~~~~~

All methods (unless otherwise specified) return the following ``json`` object:


.. code-block:: javascript

	{
	  "organizations": [
	    {
	      "id": 1,
	      "name": "Xosy Media"
	    }
	  ],
	  "apikey": "djljahflsdkfhasldkfhasldfa",
	  "name": "Merlynne Jones",
	  "created": "2015-05-03T16:21:41.995821-04:00",
	  "admin": true,
	  "id": 1,
	  "email": "merlynne@newslynx.org"
	}


.. _endpoints-user-login:

**POST** ``/login``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Enables authentication via ``email`` and ``password``.

Body
****

.. code-block:: javascript

    {
      "email": "merylnne@newlsynx.org",
      "password": "a-secure-p4ssw0rd"
    }

Returns
*******

A :ref:`endpoints-user-json` object.

Example
*******

.. code-block:: bash
	
	curl --data "email=merlynne@newslynx.org&password=admin-m3rlynn3" \
	$NEWSLYNX_API_URL/api/v1/login


.. _endpoints-user-get-me:

**GET** ``/me``
~~~~~~~~~~~~~~~~~~~~~~

Retrieves your user profile.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

A :ref:`endpoints-user-json` object.

Example
*******

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/me\?apikey=$NEWSLYNX_API_KEY

	
.. _endpoints-user-update-me:

**PUT** | **PATCH** ``/me``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Update your ``name``, ``email``, ``apikey`` and/or ``password``.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+
| ``refresh_apikey`` | ``true`` / ``false``.  | false            | false          |
|                    | If ``true``, your      |                  |                |
|                    | ``apikey`` will be     |                  |                |
|                    | refreshed.             |                  |                |
+--------------------+------------------------+------------------+----------------+

Body
****

.. code-block:: javascript

    {
      "email": "merylnne2@newlsynx.org",
      "old_password": "a-secure-p4ssw0rd",
      "new_password": "a-more-secure-p4ssw0rd",
      "name": "Meryl Jones"
    }

Returns
*******

An updated :ref:`endpoints-user-json` object.


Examples
********

Change your ``name`` and ``email``.

.. code-block:: bash
	
	curl -X PUT -d email=merlynne2@newslynx.org -d name="Meryl Jones" \
	$NEWSLYNX_API_URL/api/v1/me\?apikey=$NEWSLYNX_API_KEY

Change your ``password``.

.. code-block:: bash
	
	curl -X PUT -d old_password="a-secure-p4ssw0rd" -d new_password="a-more-secure-p4ssw0rd" \
	$NEWSLYNX_API_URL/api/v1/me\?apikey=$NEWSLYNX_API_KEY

Refresh your ``apikey``

.. code-block:: bash
	
	curl -X PUT $NEWSLYNX_API_URL/api/v1/me\?apikey=$NEWSLYNX_API_KEY\&refresh_apikey=true


.. _endpoints-user-delete-me:

**DELETE** ``/me``
~~~~~~~~~~~~~~~~~~~~~~~~~

Delete your account.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

``STATUS_CODE`` - ``204``

Example
********

.. code-block:: bash
	
	curl -X DELETE $NEWSLYNX_API_URL/api/v1/me\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs:

**Organizations**
++++++++++++++++++

The **Organizations** API enables the creation / updating / deleting of organizations, users and settings, as well as assigning / removing users from organizations. All **PUT**, **PATCH**, **POST**, and **DELETE** methods require that the requesting user is an admin. 


.. _endpoints-orgs-json:

Organization JSON
~~~~~~~~~~~~~~~~~

All methods, unless otherwise specified, will return one or many organization objects of the following ``json`` schema:

.. code-block:: javascript

  {
    "users": [
      {
        "admin": true,
        "email": "jon@example.com",
        "created": "2015-04-28T01:28:52.172260-04:00",
        "id": 2,
        "name": "Jon Conroy"
      },
      {
        "admin": true,
        "email": "merlynne@newslynx.org",
        "created": "2015-05-06T21:28:52.150736-04:00",
        "id": 1,
        "name": "Merlynne Jones"
      }
    ],
    "settings": [...],
    "authorizations": [...],
    "id": 1,
    "name": "liveqa"
  }
	

.. _endpoints-orgs-list:

**GET** ``/orgs``
~~~~~~~~~~~~~~~~~~~~~~~~~

Fetch a list of organizations you have access to.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

A list of :ref:`endpoints-orgs-json` objects.

Example
*******

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/orgs\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-create:

**POST** ``/orgs``
~~~~~~~~~~~~~~~~~~~~~~~~~

Create an organization. This will also add the requesting user to that organization.

**NOTE**: 
	- Requires admin privileges.


Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Body
****

.. code-block:: javascript

    {
      "name": "ProPalpatine"
    }

Returns
*******

An :ref:`endpoints-orgs-json` object.

Example
*******

.. code-block:: bash
	
	curl --data "name=ProPalpatine" \
	$NEWSLYNX_API_URL/api/v1/orgs\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-get:

**GET** ``/orgs/:org_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Fetch an organization object.

**NOTE**: 
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

An :ref:`endpoints-orgs-json` object.

Example
*******

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/orgs/1\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-update:

**PUT** | **PATCH** ``/orgs/:org_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Change an organization's ``name``.

**NOTE**: 
	- Requires admin privileges.
	- You can pass in either an organization's ``id`` or it's (current) ``name`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

An updated :ref:`endpoints-orgs-json` object.

Body
****

.. code-block:: javascript

    {
      "name": "ProPalpatine2"
    }


Example
*******

.. code-block:: bash
	
	curl -X PUT -d name=ProPalpatine2 \
	$NEWSLYNX_API_URL/api/v1/orgs/2\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-delete:

**DELETE** ``/orgs/:org_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Delete an organization and all of it's associated collections.

**NOTE**: 
	- Requires admin privileges.
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.

**WARNING**:
	- This method will delete all data associated with this organization, except for users.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

``STATUS_CODE``: ``204``


Example
*******

.. code-block:: bash
	
	curl -X DELETE $NEWSLYNX_API_URL/api/v1/orgs/2\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-users-list:

**GET** ``/orgs/:org_id/users``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Fetch all users associated with an organization.

**NOTE**: 
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

A list of :ref:`endpoints-user-json` object.


Example
*******

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/orgs/2/users\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-users-create:

**POST** ``/orgs/:org_id/users``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Create a new user under an organization.

**NOTE**: 
	- Requires admin privileges.
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Body
****

.. code-block:: javascript

    {
      "name": "Brian Abelson",
      "email": "b@nytimes.cat",
      "password": "l0l4k4t",
      "admin": false
    }


Returns
*******

A :ref:`endpoints-user-json` object.


Example
*******

.. code-block:: bash
	
	curl --data "name=Brian Abelson&email=b@nytimes.cat&password=l0l4k4t&admin=false" \
	$NEWSLYNX_API_URL/api/v1/orgs/2/users\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-users-get-user:

**GET** ``/orgs/:org_id/users/:user_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Fetch a user that belongs to a given organization.

**NOTE**: 
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.
	- You can pass in either an user's ``id`` or his/her ``email`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

A :ref:`endpoints-user-json` object.


Example
*******

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/orgs/2/users/b@nytimes.cat\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-users-add-user:

**PUT** | **PATCH** ``/orgs/:org_id/users/:user_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Add an existing user to an organization.

**NOTE**:
	- Requires admin privileges. 
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.
	- You can pass in either an user's ``id`` or his/her ``email`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

A :ref:`endpoints-user-json` object with a new organization affiliation.


Example
*******

.. code-block:: bash
	
	curl -X PUT $NEWSLYNX_API_URL/api/v1/orgs/2/users/m@nytimes.cat\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-users-remove-user:

**DELETE** ``/orgs/:org_id/users/:user_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Add an existing user to an organization.

**NOTE**:
	- Requires admin privileges. 
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.
	- You can pass in either an user's ``id`` or his/her ``email`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            | null             | true           |
+--------------------+------------------------+------------------+----------------+
| ``force``          | ``true`` / ``false``.  | false            | false          |
|                    | If ``true``, the       |                  |                |
|                    | user will be permanenly|                  |                |
|                    | deleted. This option is|                  |                |
|                    | only relevant if a user|                  |                |
|                    | does not have other    |                  |                |
|                    | organizational         |                  |                |
|                    | affiliations.          |                  |                |
+--------------------+------------------------+------------------+----------------+


Returns
*******

``STATUS_CODE`` - ``204``


Example
*******

.. code-block:: bash
	
	curl -X DELETE $NEWSLYNX_API_URL/api/v1/orgs/2/users/m@nytimes.cat\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-settings:

**Settings**
++++++++++++++++++

The **Settings** API enables the creation / updating / deleting of arbitrarty settings associated with an organization. The settings collection is key/value store which can grow with the complexity of the application. 


.. _endpoints-settings-json:

Setting JSON
~~~~~~~~~~~~~~~~~

All methods, unless otherwise specified, will return one or many setting objects of the following ``json`` schema:

.. code-block:: javascript

	{
	    "id": 1,
	    "name": "logo_image",
	    "value": "http://example.com/mylogo.png",
	    "json_value": false
    }

If a setting has been declared as having a ``json_value``, it will be parsed as such in the response:

.. code-block:: javascript

	{
	    "id": 1,
	    "name": "domains",
	    "value": ["propalpatine.org", "blog.propalpatine.org"],
	    "json_value": true
    }

.. _endpoints-orgs-settings-list:

**GET** ``/orgs/:org_id/settings``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Get a list of an organization's settings.

**NOTE**:
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

A list of :ref:`endpoints-settings-json` objects.


Example
*******

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/orgs/2/settings\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-settings-upsert:

**POST | PUT | PATCH** ``/orgs/:org_id/settings``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Upsert an organization's setting.

TK: I built it this way because i thought it would be easier to build a single form that created / updated, but if you're creating objects for each setting, you may need a normal PUT /settings/:id endpoint.

**NOTE**:
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Body
******

A complete or partial :ref:`endpoints-settings-json` object.

Returns
*******

A newly-created or modified :ref:`endpoints-settings-json` object.


Examples
********

Create a simple setting.

.. code-block:: bash
	
		curl --data "name=icon&value=http://example.com/mylogo.png" \
	$NEWSLYNX_API_URL/api/v1/orgs/1/settings\?apikey=$NEWSLYNX_API_KEY

Create a ``json`` setting.

.. code-block:: bash
	
		curl --data "name=short_urls&value=[\"prplt.in\"]&json_value=true" \
	$NEWSLYNX_API_URL/api/v1/orgs/1/settings\?apikey=$NEWSLYNX_API_KEY

Update a setting.

.. code-block:: bash
	
		curl --data "name=short_urls&value=[\"zzzz.in\"]&json_value=true" \
	$NEWSLYNX_API_URL/api/v1/orgs/1/settings\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-orgs-settings-get:

**GET** ``/orgs/:org_id/settings/:name``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Get an organization's setting by it's name.

**NOTE**:
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.
	- You can pass in either a setting's ``id`` or it's ``name`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

A :ref:`endpoints-settings-json` object.


Example
********

.. code-block:: bash
	
		curl $NEWSLYNX_API_URL/api/v1/orgs/1/settings/icon\?apikey=$NEWSLYNX_API_KEY

.. _endpoints-orgs-settings-delete:

**DELETE** ``/orgs/:org_id/settings/:name``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Delete an organization's setting by it's name.

**NOTE**:
	- You can pass in either an organization's ``id`` or it's ``name`` to this endpoint.
	- You can pass in either a setting's ``id`` or it's ``name`` to this endpoint.

Params
******

+--------------------+------------------------+------------------+----------------+
| Parameter          |  Description           |  Default         |  Required      |
+====================+========================+==================+================+
| ``apikey``         | Your apikey            |  null            | true           |
+--------------------+------------------------+------------------+----------------+

Returns
*******

``STATUS_CODE`` - ``204``


Example
********

.. code-block:: bash
	
		curl -X DELETE $NEWSLYNX_API_URL/api/v1/orgs/1/settings/icon\?apikey=$NEWSLYNX_API_KEY


.. _endpoints-tags:

**Tags**
++++++++++++++++++

The **Tags** API enables the listing / creating / updating / deleting of tags.

.. _endpoints-tags-json:

Tag JSON
~~~~~~~~~~~~~~~~~

All methods, unless otherwise specified, will return one or many tag objects of the following ``json`` schema. Refer to the :ref:`Taxonomy docs <taxonomy-tags>` for an explanation of this collection.

A :ref:`taxonomy-subject-tags` takes the following schema:

.. code-block:: javascript

	{
	    "id": 1,
	    "organization_id": 1,
	    "name": "Politics",
	    "type": "subject",
	    "color": "#fc0"
	}

An :ref:`taxonomy-impact-tags` takes the following schema:

.. code-block:: javascript

	{
	    "id": 1,
	    "organization_id": 1,
	    "name": "Social Media Share",
	    "type": "impact",
	    "color": "#0cf",
	    "category": "citation",
	    "level": "media"
	}

.. _endpoints-tags-list:

**GET** ``/tags``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

List all tags associated with an organization, as well as helpful faceted counts.

**NOTE**:
	- You can pass in either an tag's ``id`` or it's ``name`` to this endpoint.

Params
******

+--------------------+--------------------------------+------------------+----------------+
| Parameter          |  Description                   |  Default         |  Required      |
+====================+================================+==================+================+
| ``apikey``         | Your apikey                    | null             | true           |
+--------------------+--------------------------------+------------------+----------------+
| ``org``            | The organization's             | null             | true           |
|                    | ``id`` or ``name`` you         |                  |                |
|                    | wish to access.                |                  |                |
+--------------------+--------------------------------+------------------+----------------+
| ``type``           | A :ref:`taxonomy-tag-type` to  | null             | false          |
|                    | filter by.                     |                  |                |
+--------------------+--------------------------------+------------------+----------------+
| ``category``       | An :ref:`taxonomy-tag-cat` to  | null             | false          |
|                    | filter by.                     |                  |                |
+--------------------+--------------------------------+------------------+----------------+
| ``level``          | An :ref:`taxonomy-tag-level`   | null             | false          |
|                    | to filter by.                  |                  |                |
+--------------------+--------------------------------+------------------+----------------+

Returns
*******

.. code-block:: javascript

	{
	  "facets": {
	    "levels": {
	      "instituion": 2,
	      "media": 3,
	      "individual": 1,
	      "internal": 2,
	      "community": 2
	    },
	    "categories": {
	      "other": 5,
	      "citation": 1,
	      "change": 2,
	      "achievement": 2
	    },
	    "types": {
	      "impact": 10,
	      "subject": 10
	    }
	  },
	  "tags": [
	    {
	      "thing_count": 0,
	      "name": "nisi illum",
	      "color": "#13962A",
	      "organization_id": 1,
	      "type": "subject",
	      "id": 14
	    },
	    {
	      "category": "change",
	      "name": "molestiae ",
	      "level": "individual",
	      "color": "#43E1D8",
	      "event_count": 0,
	      "organization_id": 1,
	      "type": "impact",
	      "id": 1
	    },
	    ...
	  ]
	}


Example
********

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/tags\?apikey=$NEWSLYNX_API_KEY\&org=1


.. _endpoints-tags-create:

**POST** ``/tags``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Create a tag.

Params
******

+--------------------+--------------------------------+------------------+----------------+
| Parameter          |  Description                   |  Default         |  Required      |
+====================+================================+==================+================+
| ``apikey``         | Your apikey                    | null             | true           |
+--------------------+--------------------------------+------------------+----------------+
| ``org``            | The organization's             | null             | true           |
|                    | ``id`` or ``name`` you         |                  |                |
|                    | wish to access.                |                  |                |
+--------------------+--------------------------------+------------------+----------------+

Body
*****

A :ref:`endpoints-tags-json` object.

Returns
*******

A newly-created :ref:`endpoints-tags-json` object.


Example
********

Create a subject tag.

.. code-block:: bash
	
	curl --data "name=foo&type=subject&color=#fc0" \
	$NEWSLYNX_API_URL/api/v1/tags\?apikey=$NEWSLYNX_API_KEY\&org=1

Create a impact tag.

.. code-block:: bash
	
	curl --data "name=bar&type=subject&color=#0cf&level=media&category=change" \
	$NEWSLYNX_API_URL/api/v1/tags\?apikey=$NEWSLYNX_API_KEY\&org=1

.. _endpoints-tags-get:

**GET** ``/tags/:tag_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Get an individual tag.

Params
******

+--------------------+--------------------------------+------------------+----------------+
| Parameter          |  Description                   |  Default         |  Required      |
+====================+================================+==================+================+
| ``apikey``         | Your apikey                    | null             | true           |
+--------------------+--------------------------------+------------------+----------------+
| ``org``            | The organization's             | null             | true           |
|                    | ``id`` or ``name`` you         |                  |                |
|                    | wish to access.                |                  |                |
+--------------------+--------------------------------+------------------+----------------+

Returns
*******

A :ref:`endpoints-tags-json` object.

Example
********

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/tags/21\?apikey=$NEWSLYNX_API_KEY\&org=1


.. _endpoints-tags-update:

**PUT** | **PATCH** ``/tags/:tag_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Update a tag.

Params
******

+--------------------+--------------------------------+------------------+----------------+
| Parameter          |  Description                   |  Default         |  Required      |
+====================+================================+==================+================+
| ``apikey``         | Your apikey                    | null             | true           |
+--------------------+--------------------------------+------------------+----------------+
| ``org``            | The organization's             | null             | true           |
|                    | ``id`` or ``name`` you         |                  |                |
|                    | wish to access.                |                  |                |
+--------------------+--------------------------------+------------------+----------------+

Body
*****

A complete or partial :ref:`endpoints-tags-json` object.

Returns
*******

An updated :ref:`endpoints-tags-json` object.

Example
********

.. code-block:: bash
	
	curl -X PUT -d "color=#fc0aaa" \
	$NEWSLYNX_API_URL/api/v1/tags/21\?apikey=$NEWSLYNX_API_KEY\&org=1


.. _endpoints-tags-delete:

**DELETE** ``/tags/:tag_id``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Delete a tag.

Params
******

+--------------------+--------------------------------+------------------+----------------+
| Parameter          |  Description                   |  Default         |  Required      |
+====================+================================+==================+================+
| ``apikey``         | Your apikey                    | null             | true           |
+--------------------+--------------------------------+------------------+----------------+
| ``org``            | The organization's             | null             | true           |
|                    | ``id`` or ``name`` you         |                  |                |
|                    | wish to access.                |                  |                |
+--------------------+--------------------------------+------------------+----------------+


Returns
*******

``STATUS_CODE`` - ``204``

Example
********

.. code-block:: bash
	
	curl -X DELETE $NEWSLYNX_API_URL/api/v1/tags/21\?apikey=$NEWSLYNX_API_KEY\&org=1


.. _endpoints-tags-categories:

**GET** ``/tags/categories``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Get a list of Tag Categories. This endpoint exists to aid in creating dynamic UIs.

Returns
*******

A list of every :ref:`taxonomy-tag-cat`.

Example
********

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/tags/categories

.. _endpoints-tags-levels:


**GET** ``/tags/levels``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Get a list of Tag levels. This endpoint exists to aid in creating dynamic UIs.

Returns
*******

A list of every :ref:`taxonomy-tag-level`.

Example
********

.. code-block:: bash
	
	curl $NEWSLYNX_API_URL/api/v1/tags/levels
